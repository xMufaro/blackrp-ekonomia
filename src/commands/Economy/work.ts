import { Command } from "../../structures/Command";
import { Economy } from "../../models/economy";
import { EmbedBuilder } from "discord.js";
import ms from "ms";

// üëÆ‚Äç‚ôÇÔ∏èüïµÔ∏èüíÇ‚Äç‚ôÇÔ∏èü•∑üë∑‚Äç‚ôÇÔ∏èüë®‚Äç‚öïÔ∏èüë®‚Äçüè´üë®‚Äçüåæüë®‚Äçüç≥üë®‚Äçüîßüë®‚Äçüè≠üë®‚Äçüî¨üë®‚Äçüíªüë®‚Äçüé®üë®‚Äç‚úàÔ∏è
const jobList = [
    "üëÆ‚Äç‚ôÇÔ∏è Policjant",
    "üïµÔ∏è Detektyw",
    "üíÇ‚Äç‚ôÇÔ∏è Stra≈ºnik",
    "ü•∑ Najemnik",
    "üë∑‚Äç‚ôÇÔ∏è Budowniczy",
    "üë®‚Äç‚öïÔ∏è Lekarz",
    "üë®‚Äçüè´ Nauczyciel",
    "üë®‚Äçüåæ Rolnik",
    "üë®‚Äçüç≥ Kucharz",
    "üë®‚Äçüîß Mechanik",
    "üë®‚Äçüè≠ Robotnik",
    "üë®‚Äçüî¨ Naukowiec",
    "üë®‚Äçüíª Programista",
    "üë®‚Äçüé® Artysta",
    "üë®‚Äç‚úàÔ∏è Pilot",
]

export default new Command({
    name: "pracuj",
    description: "üë®‚Äçüíº Pracujesz i zarabiasz pieniƒÖdze",
    run: async ({ interaction, client }) => {

        const user = interaction.user;

        const db = await Economy.findOne({ userId: user.id }) || await Economy.create({ userId: user.id });

        const job = jobList[Math.floor(Math.random() * jobList.length)];

        const amount = Math.floor(Math.random() * (500 + (Math.random() * ((db.wallet + db.bank) * 0.05)))) + 300 ;


        if(db.cooldowns.work.getTime() > Date.now()) {
            const time = new Date(db.cooldowns.work.getTime() - Date.now()).toISOString().slice(11, 19);
            return interaction.followUp(`‚è± Musisz odczekaƒá **${ms(db.cooldowns.work.getTime() - Date.now())}** przed ponownym u≈ºyciem tej komendy!`);
        }

        db.wallet += amount;
        db.cooldowns.work = new Date((new Date()).getTime() + 1000 * 60 * 60);
        db.save();

        const embed = new EmbedBuilder()
            .setAuthor({ name: "Praca", iconURL: user.displayAvatarURL() })
            .setDescription(`üë®‚Äçüíº Pracowa≈Çe≈õ jako \`${job.split(" ")[0]}\` ${job.split(" ")[1]} i zarobi≈Çe≈õ ${amount} üí∏`)
            .setColor("LuminousVividPink")
            .setTimestamp()

        interaction.followUp({ embeds: [embed] });

    }
})

